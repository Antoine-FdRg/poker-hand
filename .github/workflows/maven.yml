name: CI/CD Pipeline

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Run Tests
        run: mvn test


      - name: Check and Create Tag
        if: github.ref == 'refs/heads/main' && success()
        run: |
          # Configure Git user identity
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git config --global user.name "${GITHUB_ACTOR}"
          
          # Generate a JAR file
          mvn clean package
          
          # Get the current project version from the POM.xml
          PROJECT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          
          # Check if the "1.0.0" tag exists
          if git rev-parse --quiet --verify v1.0.0 >/dev/null; then
            # Increment the project version (e.g., 1.0.0 -> 1.0.1)
            NEW_VERSION="${PROJECT_VERSION%.*}.$((${PROJECT_VERSION##*.}+1))"
          else
            # If the "1.0.0" tag doesn't exist, set the version to "1.0.0"
            NEW_VERSION="1.0.0"
          fi
          
          # Update the project version in the POM.xml
          mvn versions:set -DnewVersion=${NEW_VERSION} -DgenerateBackupPoms=false
          
          # Commit the updated POM.xml
          git commit -am "Bump version to ${NEW_VERSION}"
          
          # Create a version tag and push it
          git tag -a v${NEW_VERSION} -m "Version ${NEW_VERSION}"
          git push --tags
